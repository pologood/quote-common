// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Rank.proto

package com.baidu.stock.quote.protocbuf;

public final class RankProto {
  private RankProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RankOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.baidu.stock.quote.protocbuf.Rank)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 1;</code>
     *
     * <pre>
     *股票信息
     * </pre>
     */
    boolean hasStockBasic();
    /**
     * <code>optional .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 1;</code>
     *
     * <pre>
     *股票信息
     * </pre>
     */
    com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic getStockBasic();
    /**
     * <code>optional .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 1;</code>
     *
     * <pre>
     *股票信息
     * </pre>
     */
    com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasicOrBuilder getStockBasicOrBuilder();

    /**
     * <code>optional float price = 2;</code>
     *
     * <pre>
     *当前最新价
     * </pre>
     */
    boolean hasPrice();
    /**
     * <code>optional float price = 2;</code>
     *
     * <pre>
     *当前最新价
     * </pre>
     */
    float getPrice();

    /**
     * <code>optional int64 volume = 3;</code>
     *
     * <pre>
     *累计成交量
     * </pre>
     */
    boolean hasVolume();
    /**
     * <code>optional int64 volume = 3;</code>
     *
     * <pre>
     *累计成交量
     * </pre>
     */
    long getVolume();

    /**
     * <code>optional double amount = 4;</code>
     *
     * <pre>
     *累计成交额
     * </pre>
     */
    boolean hasAmount();
    /**
     * <code>optional double amount = 4;</code>
     *
     * <pre>
     *累计成交额
     * </pre>
     */
    double getAmount();

    /**
     * <code>optional float netChange = 5;</code>
     *
     * <pre>
     *涨跌
     * </pre>
     */
    boolean hasNetChange();
    /**
     * <code>optional float netChange = 5;</code>
     *
     * <pre>
     *涨跌
     * </pre>
     */
    float getNetChange();

    /**
     * <code>optional float netChangeRatio = 6;</code>
     *
     * <pre>
     *涨跌幅
     * </pre>
     */
    boolean hasNetChangeRatio();
    /**
     * <code>optional float netChangeRatio = 6;</code>
     *
     * <pre>
     *涨跌幅
     * </pre>
     */
    float getNetChangeRatio();

    /**
     * <code>optional float amplitudeRatio = 7;</code>
     *
     * <pre>
     *振幅
     * </pre>
     */
    boolean hasAmplitudeRatio();
    /**
     * <code>optional float amplitudeRatio = 7;</code>
     *
     * <pre>
     *振幅
     * </pre>
     */
    float getAmplitudeRatio();

    /**
     * <code>optional float turnoverRatio = 8;</code>
     *
     * <pre>
     *换手率
     * </pre>
     */
    boolean hasTurnoverRatio();
    /**
     * <code>optional float turnoverRatio = 8;</code>
     *
     * <pre>
     *换手率
     * </pre>
     */
    float getTurnoverRatio();

    /**
     * <code>optional float volumeRatio = 9;</code>
     *
     * <pre>
     *量比
     * </pre>
     */
    boolean hasVolumeRatio();
    /**
     * <code>optional float volumeRatio = 9;</code>
     *
     * <pre>
     *量比
     * </pre>
     */
    float getVolumeRatio();

    /**
     * <code>optional float peratio = 10;</code>
     *
     * <pre>
     *市盈率
     * </pre>
     */
    boolean hasPeratio();
    /**
     * <code>optional float peratio = 10;</code>
     *
     * <pre>
     *市盈率
     * </pre>
     */
    float getPeratio();

    /**
     * <code>optional double capitalization = 11;</code>
     *
     * <pre>
     *总市值
     * </pre>
     */
    boolean hasCapitalization();
    /**
     * <code>optional double capitalization = 11;</code>
     *
     * <pre>
     *总市值
     * </pre>
     */
    double getCapitalization();

    /**
     * <code>optional double currencyValue = 12;</code>
     *
     * <pre>
     *流通市值
     * </pre>
     */
    boolean hasCurrencyValue();
    /**
     * <code>optional double currencyValue = 12;</code>
     *
     * <pre>
     *流通市值
     * </pre>
     */
    double getCurrencyValue();

    /**
     * <code>optional int32 rankIndex = 13;</code>
     *
     * <pre>
     *排行顺序
     * </pre>
     */
    boolean hasRankIndex();
    /**
     * <code>optional int32 rankIndex = 13;</code>
     *
     * <pre>
     *排行顺序
     * </pre>
     */
    int getRankIndex();

    /**
     * <code>optional double netFundsFlow = 14;</code>
     *
     * <pre>
     *主力资金净流入
     * </pre>
     */
    boolean hasNetFundsFlow();
    /**
     * <code>optional double netFundsFlow = 14;</code>
     *
     * <pre>
     *主力资金净流入
     * </pre>
     */
    double getNetFundsFlow();

    /**
     * <code>optional string catName = 15;</code>
     *
     * <pre>
     *分类名称
     * </pre>
     */
    boolean hasCatName();
    /**
     * <code>optional string catName = 15;</code>
     *
     * <pre>
     *分类名称
     * </pre>
     */
    java.lang.String getCatName();
    /**
     * <code>optional string catName = 15;</code>
     *
     * <pre>
     *分类名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getCatNameBytes();
  }
  /**
   * Protobuf type {@code com.baidu.stock.quote.protocbuf.Rank}
   *
   * <pre>
   * 排行数据
   * </pre>
   */
  public static final class Rank extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.baidu.stock.quote.protocbuf.Rank)
      RankOrBuilder {
    // Use Rank.newBuilder() to construct.
    private Rank(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Rank(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Rank defaultInstance;
    public static Rank getDefaultInstance() {
      return defaultInstance;
    }

    public Rank getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Rank(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = stockBasic_.toBuilder();
              }
              stockBasic_ = input.readMessage(com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stockBasic_);
                stockBasic_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              price_ = input.readFloat();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              volume_ = input.readInt64();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              amount_ = input.readDouble();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              netChange_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              netChangeRatio_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              amplitudeRatio_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              turnoverRatio_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              volumeRatio_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              peratio_ = input.readFloat();
              break;
            }
            case 89: {
              bitField0_ |= 0x00000400;
              capitalization_ = input.readDouble();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              currencyValue_ = input.readDouble();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              rankIndex_ = input.readInt32();
              break;
            }
            case 113: {
              bitField0_ |= 0x00002000;
              netFundsFlow_ = input.readDouble();
              break;
            }
            case 122: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00004000;
              catName_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.baidu.stock.quote.protocbuf.RankProto.internal_static_com_baidu_stock_quote_protocbuf_Rank_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.baidu.stock.quote.protocbuf.RankProto.internal_static_com_baidu_stock_quote_protocbuf_Rank_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.baidu.stock.quote.protocbuf.RankProto.Rank.class, com.baidu.stock.quote.protocbuf.RankProto.Rank.Builder.class);
    }

    public static com.google.protobuf.Parser<Rank> PARSER =
        new com.google.protobuf.AbstractParser<Rank>() {
      public Rank parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Rank(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Rank> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STOCKBASIC_FIELD_NUMBER = 1;
    private com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic stockBasic_;
    /**
     * <code>optional .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 1;</code>
     *
     * <pre>
     *股票信息
     * </pre>
     */
    public boolean hasStockBasic() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 1;</code>
     *
     * <pre>
     *股票信息
     * </pre>
     */
    public com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic getStockBasic() {
      return stockBasic_;
    }
    /**
     * <code>optional .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 1;</code>
     *
     * <pre>
     *股票信息
     * </pre>
     */
    public com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasicOrBuilder getStockBasicOrBuilder() {
      return stockBasic_;
    }

    public static final int PRICE_FIELD_NUMBER = 2;
    private float price_;
    /**
     * <code>optional float price = 2;</code>
     *
     * <pre>
     *当前最新价
     * </pre>
     */
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float price = 2;</code>
     *
     * <pre>
     *当前最新价
     * </pre>
     */
    public float getPrice() {
      return price_;
    }

    public static final int VOLUME_FIELD_NUMBER = 3;
    private long volume_;
    /**
     * <code>optional int64 volume = 3;</code>
     *
     * <pre>
     *累计成交量
     * </pre>
     */
    public boolean hasVolume() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 volume = 3;</code>
     *
     * <pre>
     *累计成交量
     * </pre>
     */
    public long getVolume() {
      return volume_;
    }

    public static final int AMOUNT_FIELD_NUMBER = 4;
    private double amount_;
    /**
     * <code>optional double amount = 4;</code>
     *
     * <pre>
     *累计成交额
     * </pre>
     */
    public boolean hasAmount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional double amount = 4;</code>
     *
     * <pre>
     *累计成交额
     * </pre>
     */
    public double getAmount() {
      return amount_;
    }

    public static final int NETCHANGE_FIELD_NUMBER = 5;
    private float netChange_;
    /**
     * <code>optional float netChange = 5;</code>
     *
     * <pre>
     *涨跌
     * </pre>
     */
    public boolean hasNetChange() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float netChange = 5;</code>
     *
     * <pre>
     *涨跌
     * </pre>
     */
    public float getNetChange() {
      return netChange_;
    }

    public static final int NETCHANGERATIO_FIELD_NUMBER = 6;
    private float netChangeRatio_;
    /**
     * <code>optional float netChangeRatio = 6;</code>
     *
     * <pre>
     *涨跌幅
     * </pre>
     */
    public boolean hasNetChangeRatio() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float netChangeRatio = 6;</code>
     *
     * <pre>
     *涨跌幅
     * </pre>
     */
    public float getNetChangeRatio() {
      return netChangeRatio_;
    }

    public static final int AMPLITUDERATIO_FIELD_NUMBER = 7;
    private float amplitudeRatio_;
    /**
     * <code>optional float amplitudeRatio = 7;</code>
     *
     * <pre>
     *振幅
     * </pre>
     */
    public boolean hasAmplitudeRatio() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float amplitudeRatio = 7;</code>
     *
     * <pre>
     *振幅
     * </pre>
     */
    public float getAmplitudeRatio() {
      return amplitudeRatio_;
    }

    public static final int TURNOVERRATIO_FIELD_NUMBER = 8;
    private float turnoverRatio_;
    /**
     * <code>optional float turnoverRatio = 8;</code>
     *
     * <pre>
     *换手率
     * </pre>
     */
    public boolean hasTurnoverRatio() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float turnoverRatio = 8;</code>
     *
     * <pre>
     *换手率
     * </pre>
     */
    public float getTurnoverRatio() {
      return turnoverRatio_;
    }

    public static final int VOLUMERATIO_FIELD_NUMBER = 9;
    private float volumeRatio_;
    /**
     * <code>optional float volumeRatio = 9;</code>
     *
     * <pre>
     *量比
     * </pre>
     */
    public boolean hasVolumeRatio() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float volumeRatio = 9;</code>
     *
     * <pre>
     *量比
     * </pre>
     */
    public float getVolumeRatio() {
      return volumeRatio_;
    }

    public static final int PERATIO_FIELD_NUMBER = 10;
    private float peratio_;
    /**
     * <code>optional float peratio = 10;</code>
     *
     * <pre>
     *市盈率
     * </pre>
     */
    public boolean hasPeratio() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float peratio = 10;</code>
     *
     * <pre>
     *市盈率
     * </pre>
     */
    public float getPeratio() {
      return peratio_;
    }

    public static final int CAPITALIZATION_FIELD_NUMBER = 11;
    private double capitalization_;
    /**
     * <code>optional double capitalization = 11;</code>
     *
     * <pre>
     *总市值
     * </pre>
     */
    public boolean hasCapitalization() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional double capitalization = 11;</code>
     *
     * <pre>
     *总市值
     * </pre>
     */
    public double getCapitalization() {
      return capitalization_;
    }

    public static final int CURRENCYVALUE_FIELD_NUMBER = 12;
    private double currencyValue_;
    /**
     * <code>optional double currencyValue = 12;</code>
     *
     * <pre>
     *流通市值
     * </pre>
     */
    public boolean hasCurrencyValue() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional double currencyValue = 12;</code>
     *
     * <pre>
     *流通市值
     * </pre>
     */
    public double getCurrencyValue() {
      return currencyValue_;
    }

    public static final int RANKINDEX_FIELD_NUMBER = 13;
    private int rankIndex_;
    /**
     * <code>optional int32 rankIndex = 13;</code>
     *
     * <pre>
     *排行顺序
     * </pre>
     */
    public boolean hasRankIndex() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 rankIndex = 13;</code>
     *
     * <pre>
     *排行顺序
     * </pre>
     */
    public int getRankIndex() {
      return rankIndex_;
    }

    public static final int NETFUNDSFLOW_FIELD_NUMBER = 14;
    private double netFundsFlow_;
    /**
     * <code>optional double netFundsFlow = 14;</code>
     *
     * <pre>
     *主力资金净流入
     * </pre>
     */
    public boolean hasNetFundsFlow() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional double netFundsFlow = 14;</code>
     *
     * <pre>
     *主力资金净流入
     * </pre>
     */
    public double getNetFundsFlow() {
      return netFundsFlow_;
    }

    public static final int CATNAME_FIELD_NUMBER = 15;
    private java.lang.Object catName_;
    /**
     * <code>optional string catName = 15;</code>
     *
     * <pre>
     *分类名称
     * </pre>
     */
    public boolean hasCatName() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string catName = 15;</code>
     *
     * <pre>
     *分类名称
     * </pre>
     */
    public java.lang.String getCatName() {
      java.lang.Object ref = catName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          catName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string catName = 15;</code>
     *
     * <pre>
     *分类名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCatNameBytes() {
      java.lang.Object ref = catName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        catName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      stockBasic_ = com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.getDefaultInstance();
      price_ = 0F;
      volume_ = 0L;
      amount_ = 0D;
      netChange_ = 0F;
      netChangeRatio_ = 0F;
      amplitudeRatio_ = 0F;
      turnoverRatio_ = 0F;
      volumeRatio_ = 0F;
      peratio_ = 0F;
      capitalization_ = 0D;
      currencyValue_ = 0D;
      rankIndex_ = 0;
      netFundsFlow_ = 0D;
      catName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasStockBasic()) {
        if (!getStockBasic().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, stockBasic_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, price_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, volume_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, amount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, netChange_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, netChangeRatio_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, amplitudeRatio_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, turnoverRatio_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, volumeRatio_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, peratio_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeDouble(11, capitalization_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeDouble(12, currencyValue_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, rankIndex_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeDouble(14, netFundsFlow_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, getCatNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, stockBasic_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, price_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, volume_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, amount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, netChange_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, netChangeRatio_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, amplitudeRatio_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, turnoverRatio_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, volumeRatio_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, peratio_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, capitalization_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, currencyValue_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, rankIndex_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, netFundsFlow_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getCatNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.baidu.stock.quote.protocbuf.RankProto.Rank parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.baidu.stock.quote.protocbuf.RankProto.Rank parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.baidu.stock.quote.protocbuf.RankProto.Rank parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.baidu.stock.quote.protocbuf.RankProto.Rank parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.baidu.stock.quote.protocbuf.RankProto.Rank parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.baidu.stock.quote.protocbuf.RankProto.Rank parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.baidu.stock.quote.protocbuf.RankProto.Rank parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.baidu.stock.quote.protocbuf.RankProto.Rank parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.baidu.stock.quote.protocbuf.RankProto.Rank parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.baidu.stock.quote.protocbuf.RankProto.Rank parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.baidu.stock.quote.protocbuf.RankProto.Rank prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.baidu.stock.quote.protocbuf.Rank}
     *
     * <pre>
     * 排行数据
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.baidu.stock.quote.protocbuf.Rank)
        com.baidu.stock.quote.protocbuf.RankProto.RankOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.baidu.stock.quote.protocbuf.RankProto.internal_static_com_baidu_stock_quote_protocbuf_Rank_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.baidu.stock.quote.protocbuf.RankProto.internal_static_com_baidu_stock_quote_protocbuf_Rank_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.baidu.stock.quote.protocbuf.RankProto.Rank.class, com.baidu.stock.quote.protocbuf.RankProto.Rank.Builder.class);
      }

      // Construct using com.baidu.stock.quote.protocbuf.RankProto.Rank.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStockBasicFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (stockBasicBuilder_ == null) {
          stockBasic_ = com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.getDefaultInstance();
        } else {
          stockBasicBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        price_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        volume_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        amount_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        netChange_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        netChangeRatio_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        amplitudeRatio_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        turnoverRatio_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        volumeRatio_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        peratio_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        capitalization_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        currencyValue_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000800);
        rankIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        netFundsFlow_ = 0D;
        bitField0_ = (bitField0_ & ~0x00002000);
        catName_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.baidu.stock.quote.protocbuf.RankProto.internal_static_com_baidu_stock_quote_protocbuf_Rank_descriptor;
      }

      public com.baidu.stock.quote.protocbuf.RankProto.Rank getDefaultInstanceForType() {
        return com.baidu.stock.quote.protocbuf.RankProto.Rank.getDefaultInstance();
      }

      public com.baidu.stock.quote.protocbuf.RankProto.Rank build() {
        com.baidu.stock.quote.protocbuf.RankProto.Rank result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.baidu.stock.quote.protocbuf.RankProto.Rank buildPartial() {
        com.baidu.stock.quote.protocbuf.RankProto.Rank result = new com.baidu.stock.quote.protocbuf.RankProto.Rank(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (stockBasicBuilder_ == null) {
          result.stockBasic_ = stockBasic_;
        } else {
          result.stockBasic_ = stockBasicBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.price_ = price_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.volume_ = volume_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.amount_ = amount_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.netChange_ = netChange_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.netChangeRatio_ = netChangeRatio_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.amplitudeRatio_ = amplitudeRatio_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.turnoverRatio_ = turnoverRatio_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.volumeRatio_ = volumeRatio_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.peratio_ = peratio_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.capitalization_ = capitalization_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.currencyValue_ = currencyValue_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.rankIndex_ = rankIndex_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.netFundsFlow_ = netFundsFlow_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.catName_ = catName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.baidu.stock.quote.protocbuf.RankProto.Rank) {
          return mergeFrom((com.baidu.stock.quote.protocbuf.RankProto.Rank)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.baidu.stock.quote.protocbuf.RankProto.Rank other) {
        if (other == com.baidu.stock.quote.protocbuf.RankProto.Rank.getDefaultInstance()) return this;
        if (other.hasStockBasic()) {
          mergeStockBasic(other.getStockBasic());
        }
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        if (other.hasAmount()) {
          setAmount(other.getAmount());
        }
        if (other.hasNetChange()) {
          setNetChange(other.getNetChange());
        }
        if (other.hasNetChangeRatio()) {
          setNetChangeRatio(other.getNetChangeRatio());
        }
        if (other.hasAmplitudeRatio()) {
          setAmplitudeRatio(other.getAmplitudeRatio());
        }
        if (other.hasTurnoverRatio()) {
          setTurnoverRatio(other.getTurnoverRatio());
        }
        if (other.hasVolumeRatio()) {
          setVolumeRatio(other.getVolumeRatio());
        }
        if (other.hasPeratio()) {
          setPeratio(other.getPeratio());
        }
        if (other.hasCapitalization()) {
          setCapitalization(other.getCapitalization());
        }
        if (other.hasCurrencyValue()) {
          setCurrencyValue(other.getCurrencyValue());
        }
        if (other.hasRankIndex()) {
          setRankIndex(other.getRankIndex());
        }
        if (other.hasNetFundsFlow()) {
          setNetFundsFlow(other.getNetFundsFlow());
        }
        if (other.hasCatName()) {
          bitField0_ |= 0x00004000;
          catName_ = other.catName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasStockBasic()) {
          if (!getStockBasic().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.baidu.stock.quote.protocbuf.RankProto.Rank parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.baidu.stock.quote.protocbuf.RankProto.Rank) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic stockBasic_ = com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic, com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.Builder, com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasicOrBuilder> stockBasicBuilder_;
      /**
       * <code>optional .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 1;</code>
       *
       * <pre>
       *股票信息
       * </pre>
       */
      public boolean hasStockBasic() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 1;</code>
       *
       * <pre>
       *股票信息
       * </pre>
       */
      public com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic getStockBasic() {
        if (stockBasicBuilder_ == null) {
          return stockBasic_;
        } else {
          return stockBasicBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 1;</code>
       *
       * <pre>
       *股票信息
       * </pre>
       */
      public Builder setStockBasic(com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic value) {
        if (stockBasicBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stockBasic_ = value;
          onChanged();
        } else {
          stockBasicBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 1;</code>
       *
       * <pre>
       *股票信息
       * </pre>
       */
      public Builder setStockBasic(
          com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.Builder builderForValue) {
        if (stockBasicBuilder_ == null) {
          stockBasic_ = builderForValue.build();
          onChanged();
        } else {
          stockBasicBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 1;</code>
       *
       * <pre>
       *股票信息
       * </pre>
       */
      public Builder mergeStockBasic(com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic value) {
        if (stockBasicBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              stockBasic_ != com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.getDefaultInstance()) {
            stockBasic_ =
              com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.newBuilder(stockBasic_).mergeFrom(value).buildPartial();
          } else {
            stockBasic_ = value;
          }
          onChanged();
        } else {
          stockBasicBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 1;</code>
       *
       * <pre>
       *股票信息
       * </pre>
       */
      public Builder clearStockBasic() {
        if (stockBasicBuilder_ == null) {
          stockBasic_ = com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.getDefaultInstance();
          onChanged();
        } else {
          stockBasicBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 1;</code>
       *
       * <pre>
       *股票信息
       * </pre>
       */
      public com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.Builder getStockBasicBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getStockBasicFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 1;</code>
       *
       * <pre>
       *股票信息
       * </pre>
       */
      public com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasicOrBuilder getStockBasicOrBuilder() {
        if (stockBasicBuilder_ != null) {
          return stockBasicBuilder_.getMessageOrBuilder();
        } else {
          return stockBasic_;
        }
      }
      /**
       * <code>optional .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 1;</code>
       *
       * <pre>
       *股票信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic, com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.Builder, com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasicOrBuilder> 
          getStockBasicFieldBuilder() {
        if (stockBasicBuilder_ == null) {
          stockBasicBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic, com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.Builder, com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasicOrBuilder>(
                  getStockBasic(),
                  getParentForChildren(),
                  isClean());
          stockBasic_ = null;
        }
        return stockBasicBuilder_;
      }

      private float price_ ;
      /**
       * <code>optional float price = 2;</code>
       *
       * <pre>
       *当前最新价
       * </pre>
       */
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float price = 2;</code>
       *
       * <pre>
       *当前最新价
       * </pre>
       */
      public float getPrice() {
        return price_;
      }
      /**
       * <code>optional float price = 2;</code>
       *
       * <pre>
       *当前最新价
       * </pre>
       */
      public Builder setPrice(float value) {
        bitField0_ |= 0x00000002;
        price_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float price = 2;</code>
       *
       * <pre>
       *当前最新价
       * </pre>
       */
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000002);
        price_ = 0F;
        onChanged();
        return this;
      }

      private long volume_ ;
      /**
       * <code>optional int64 volume = 3;</code>
       *
       * <pre>
       *累计成交量
       * </pre>
       */
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 volume = 3;</code>
       *
       * <pre>
       *累计成交量
       * </pre>
       */
      public long getVolume() {
        return volume_;
      }
      /**
       * <code>optional int64 volume = 3;</code>
       *
       * <pre>
       *累计成交量
       * </pre>
       */
      public Builder setVolume(long value) {
        bitField0_ |= 0x00000004;
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 volume = 3;</code>
       *
       * <pre>
       *累计成交量
       * </pre>
       */
      public Builder clearVolume() {
        bitField0_ = (bitField0_ & ~0x00000004);
        volume_ = 0L;
        onChanged();
        return this;
      }

      private double amount_ ;
      /**
       * <code>optional double amount = 4;</code>
       *
       * <pre>
       *累计成交额
       * </pre>
       */
      public boolean hasAmount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double amount = 4;</code>
       *
       * <pre>
       *累计成交额
       * </pre>
       */
      public double getAmount() {
        return amount_;
      }
      /**
       * <code>optional double amount = 4;</code>
       *
       * <pre>
       *累计成交额
       * </pre>
       */
      public Builder setAmount(double value) {
        bitField0_ |= 0x00000008;
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double amount = 4;</code>
       *
       * <pre>
       *累计成交额
       * </pre>
       */
      public Builder clearAmount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        amount_ = 0D;
        onChanged();
        return this;
      }

      private float netChange_ ;
      /**
       * <code>optional float netChange = 5;</code>
       *
       * <pre>
       *涨跌
       * </pre>
       */
      public boolean hasNetChange() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float netChange = 5;</code>
       *
       * <pre>
       *涨跌
       * </pre>
       */
      public float getNetChange() {
        return netChange_;
      }
      /**
       * <code>optional float netChange = 5;</code>
       *
       * <pre>
       *涨跌
       * </pre>
       */
      public Builder setNetChange(float value) {
        bitField0_ |= 0x00000010;
        netChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float netChange = 5;</code>
       *
       * <pre>
       *涨跌
       * </pre>
       */
      public Builder clearNetChange() {
        bitField0_ = (bitField0_ & ~0x00000010);
        netChange_ = 0F;
        onChanged();
        return this;
      }

      private float netChangeRatio_ ;
      /**
       * <code>optional float netChangeRatio = 6;</code>
       *
       * <pre>
       *涨跌幅
       * </pre>
       */
      public boolean hasNetChangeRatio() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float netChangeRatio = 6;</code>
       *
       * <pre>
       *涨跌幅
       * </pre>
       */
      public float getNetChangeRatio() {
        return netChangeRatio_;
      }
      /**
       * <code>optional float netChangeRatio = 6;</code>
       *
       * <pre>
       *涨跌幅
       * </pre>
       */
      public Builder setNetChangeRatio(float value) {
        bitField0_ |= 0x00000020;
        netChangeRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float netChangeRatio = 6;</code>
       *
       * <pre>
       *涨跌幅
       * </pre>
       */
      public Builder clearNetChangeRatio() {
        bitField0_ = (bitField0_ & ~0x00000020);
        netChangeRatio_ = 0F;
        onChanged();
        return this;
      }

      private float amplitudeRatio_ ;
      /**
       * <code>optional float amplitudeRatio = 7;</code>
       *
       * <pre>
       *振幅
       * </pre>
       */
      public boolean hasAmplitudeRatio() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float amplitudeRatio = 7;</code>
       *
       * <pre>
       *振幅
       * </pre>
       */
      public float getAmplitudeRatio() {
        return amplitudeRatio_;
      }
      /**
       * <code>optional float amplitudeRatio = 7;</code>
       *
       * <pre>
       *振幅
       * </pre>
       */
      public Builder setAmplitudeRatio(float value) {
        bitField0_ |= 0x00000040;
        amplitudeRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float amplitudeRatio = 7;</code>
       *
       * <pre>
       *振幅
       * </pre>
       */
      public Builder clearAmplitudeRatio() {
        bitField0_ = (bitField0_ & ~0x00000040);
        amplitudeRatio_ = 0F;
        onChanged();
        return this;
      }

      private float turnoverRatio_ ;
      /**
       * <code>optional float turnoverRatio = 8;</code>
       *
       * <pre>
       *换手率
       * </pre>
       */
      public boolean hasTurnoverRatio() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float turnoverRatio = 8;</code>
       *
       * <pre>
       *换手率
       * </pre>
       */
      public float getTurnoverRatio() {
        return turnoverRatio_;
      }
      /**
       * <code>optional float turnoverRatio = 8;</code>
       *
       * <pre>
       *换手率
       * </pre>
       */
      public Builder setTurnoverRatio(float value) {
        bitField0_ |= 0x00000080;
        turnoverRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float turnoverRatio = 8;</code>
       *
       * <pre>
       *换手率
       * </pre>
       */
      public Builder clearTurnoverRatio() {
        bitField0_ = (bitField0_ & ~0x00000080);
        turnoverRatio_ = 0F;
        onChanged();
        return this;
      }

      private float volumeRatio_ ;
      /**
       * <code>optional float volumeRatio = 9;</code>
       *
       * <pre>
       *量比
       * </pre>
       */
      public boolean hasVolumeRatio() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float volumeRatio = 9;</code>
       *
       * <pre>
       *量比
       * </pre>
       */
      public float getVolumeRatio() {
        return volumeRatio_;
      }
      /**
       * <code>optional float volumeRatio = 9;</code>
       *
       * <pre>
       *量比
       * </pre>
       */
      public Builder setVolumeRatio(float value) {
        bitField0_ |= 0x00000100;
        volumeRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float volumeRatio = 9;</code>
       *
       * <pre>
       *量比
       * </pre>
       */
      public Builder clearVolumeRatio() {
        bitField0_ = (bitField0_ & ~0x00000100);
        volumeRatio_ = 0F;
        onChanged();
        return this;
      }

      private float peratio_ ;
      /**
       * <code>optional float peratio = 10;</code>
       *
       * <pre>
       *市盈率
       * </pre>
       */
      public boolean hasPeratio() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float peratio = 10;</code>
       *
       * <pre>
       *市盈率
       * </pre>
       */
      public float getPeratio() {
        return peratio_;
      }
      /**
       * <code>optional float peratio = 10;</code>
       *
       * <pre>
       *市盈率
       * </pre>
       */
      public Builder setPeratio(float value) {
        bitField0_ |= 0x00000200;
        peratio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float peratio = 10;</code>
       *
       * <pre>
       *市盈率
       * </pre>
       */
      public Builder clearPeratio() {
        bitField0_ = (bitField0_ & ~0x00000200);
        peratio_ = 0F;
        onChanged();
        return this;
      }

      private double capitalization_ ;
      /**
       * <code>optional double capitalization = 11;</code>
       *
       * <pre>
       *总市值
       * </pre>
       */
      public boolean hasCapitalization() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional double capitalization = 11;</code>
       *
       * <pre>
       *总市值
       * </pre>
       */
      public double getCapitalization() {
        return capitalization_;
      }
      /**
       * <code>optional double capitalization = 11;</code>
       *
       * <pre>
       *总市值
       * </pre>
       */
      public Builder setCapitalization(double value) {
        bitField0_ |= 0x00000400;
        capitalization_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double capitalization = 11;</code>
       *
       * <pre>
       *总市值
       * </pre>
       */
      public Builder clearCapitalization() {
        bitField0_ = (bitField0_ & ~0x00000400);
        capitalization_ = 0D;
        onChanged();
        return this;
      }

      private double currencyValue_ ;
      /**
       * <code>optional double currencyValue = 12;</code>
       *
       * <pre>
       *流通市值
       * </pre>
       */
      public boolean hasCurrencyValue() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional double currencyValue = 12;</code>
       *
       * <pre>
       *流通市值
       * </pre>
       */
      public double getCurrencyValue() {
        return currencyValue_;
      }
      /**
       * <code>optional double currencyValue = 12;</code>
       *
       * <pre>
       *流通市值
       * </pre>
       */
      public Builder setCurrencyValue(double value) {
        bitField0_ |= 0x00000800;
        currencyValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double currencyValue = 12;</code>
       *
       * <pre>
       *流通市值
       * </pre>
       */
      public Builder clearCurrencyValue() {
        bitField0_ = (bitField0_ & ~0x00000800);
        currencyValue_ = 0D;
        onChanged();
        return this;
      }

      private int rankIndex_ ;
      /**
       * <code>optional int32 rankIndex = 13;</code>
       *
       * <pre>
       *排行顺序
       * </pre>
       */
      public boolean hasRankIndex() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 rankIndex = 13;</code>
       *
       * <pre>
       *排行顺序
       * </pre>
       */
      public int getRankIndex() {
        return rankIndex_;
      }
      /**
       * <code>optional int32 rankIndex = 13;</code>
       *
       * <pre>
       *排行顺序
       * </pre>
       */
      public Builder setRankIndex(int value) {
        bitField0_ |= 0x00001000;
        rankIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rankIndex = 13;</code>
       *
       * <pre>
       *排行顺序
       * </pre>
       */
      public Builder clearRankIndex() {
        bitField0_ = (bitField0_ & ~0x00001000);
        rankIndex_ = 0;
        onChanged();
        return this;
      }

      private double netFundsFlow_ ;
      /**
       * <code>optional double netFundsFlow = 14;</code>
       *
       * <pre>
       *主力资金净流入
       * </pre>
       */
      public boolean hasNetFundsFlow() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional double netFundsFlow = 14;</code>
       *
       * <pre>
       *主力资金净流入
       * </pre>
       */
      public double getNetFundsFlow() {
        return netFundsFlow_;
      }
      /**
       * <code>optional double netFundsFlow = 14;</code>
       *
       * <pre>
       *主力资金净流入
       * </pre>
       */
      public Builder setNetFundsFlow(double value) {
        bitField0_ |= 0x00002000;
        netFundsFlow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double netFundsFlow = 14;</code>
       *
       * <pre>
       *主力资金净流入
       * </pre>
       */
      public Builder clearNetFundsFlow() {
        bitField0_ = (bitField0_ & ~0x00002000);
        netFundsFlow_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object catName_ = "";
      /**
       * <code>optional string catName = 15;</code>
       *
       * <pre>
       *分类名称
       * </pre>
       */
      public boolean hasCatName() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string catName = 15;</code>
       *
       * <pre>
       *分类名称
       * </pre>
       */
      public java.lang.String getCatName() {
        java.lang.Object ref = catName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            catName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string catName = 15;</code>
       *
       * <pre>
       *分类名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCatNameBytes() {
        java.lang.Object ref = catName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          catName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string catName = 15;</code>
       *
       * <pre>
       *分类名称
       * </pre>
       */
      public Builder setCatName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        catName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string catName = 15;</code>
       *
       * <pre>
       *分类名称
       * </pre>
       */
      public Builder clearCatName() {
        bitField0_ = (bitField0_ & ~0x00004000);
        catName_ = getDefaultInstance().getCatName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string catName = 15;</code>
       *
       * <pre>
       *分类名称
       * </pre>
       */
      public Builder setCatNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        catName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.baidu.stock.quote.protocbuf.Rank)
    }

    static {
      defaultInstance = new Rank(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.baidu.stock.quote.protocbuf.Rank)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_baidu_stock_quote_protocbuf_Rank_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_baidu_stock_quote_protocbuf_Rank_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nRank.proto\022\037com.baidu.stock.quote.prot" +
      "ocbuf\032\020StockBasic.proto\"\337\002\n\004Rank\022?\n\nstoc" +
      "kBasic\030\001 \001(\0132+.com.baidu.stock.quote.pro" +
      "tocbuf.StockBasic\022\r\n\005price\030\002 \001(\002\022\016\n\006volu" +
      "me\030\003 \001(\003\022\016\n\006amount\030\004 \001(\001\022\021\n\tnetChange\030\005 " +
      "\001(\002\022\026\n\016netChangeRatio\030\006 \001(\002\022\026\n\016amplitude" +
      "Ratio\030\007 \001(\002\022\025\n\rturnoverRatio\030\010 \001(\002\022\023\n\013vo" +
      "lumeRatio\030\t \001(\002\022\017\n\007peratio\030\n \001(\002\022\026\n\016capi" +
      "talization\030\013 \001(\001\022\025\n\rcurrencyValue\030\014 \001(\001\022" +
      "\021\n\trankIndex\030\r \001(\005\022\024\n\014netFundsFlow\030\016 \001(\001",
      "\022\017\n\007catName\030\017 \001(\tB,\n\037com.baidu.stock.quo" +
      "te.protocbufB\tRankProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.baidu.stock.quote.protocbuf.StockBasicProto.getDescriptor(),
        }, assigner);
    internal_static_com_baidu_stock_quote_protocbuf_Rank_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_baidu_stock_quote_protocbuf_Rank_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_baidu_stock_quote_protocbuf_Rank_descriptor,
        new java.lang.String[] { "StockBasic", "Price", "Volume", "Amount", "NetChange", "NetChangeRatio", "AmplitudeRatio", "TurnoverRatio", "VolumeRatio", "Peratio", "Capitalization", "CurrencyValue", "RankIndex", "NetFundsFlow", "CatName", });
    com.baidu.stock.quote.protocbuf.StockBasicProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
