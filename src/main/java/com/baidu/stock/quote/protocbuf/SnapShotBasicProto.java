// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SnapShotBasic.proto

package com.baidu.stock.quote.protocbuf;

public final class SnapShotBasicProto {
  private SnapShotBasicProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SnapShotBasicOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.baidu.stock.quote.protocbuf.SnapShotBasic)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string date = 1;</code>
     *
     * <pre>
     * 日期格式 yyyyMMdd
     * </pre>
     */
    boolean hasDate();
    /**
     * <code>required string date = 1;</code>
     *
     * <pre>
     * 日期格式 yyyyMMdd
     * </pre>
     */
    java.lang.String getDate();
    /**
     * <code>required string date = 1;</code>
     *
     * <pre>
     * 日期格式 yyyyMMdd
     * </pre>
     */
    com.google.protobuf.ByteString
        getDateBytes();

    /**
     * <code>required string time = 2;</code>
     *
     * <pre>
     * 时间格式 HHmmss
     * </pre>
     */
    boolean hasTime();
    /**
     * <code>required string time = 2;</code>
     *
     * <pre>
     * 时间格式 HHmmss
     * </pre>
     */
    java.lang.String getTime();
    /**
     * <code>required string time = 2;</code>
     *
     * <pre>
     * 时间格式 HHmmss
     * </pre>
     */
    com.google.protobuf.ByteString
        getTimeBytes();

    /**
     * <code>required .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 3;</code>
     *
     * <pre>
     * 股票信息
     * </pre>
     */
    boolean hasStockBasic();
    /**
     * <code>required .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 3;</code>
     *
     * <pre>
     * 股票信息
     * </pre>
     */
    com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic getStockBasic();
    /**
     * <code>required .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 3;</code>
     *
     * <pre>
     * 股票信息
     * </pre>
     */
    com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasicOrBuilder getStockBasicOrBuilder();

    /**
     * <code>optional float preClose = 4;</code>
     *
     * <pre>
     * 昨收盘价
     * </pre>
     */
    boolean hasPreClose();
    /**
     * <code>optional float preClose = 4;</code>
     *
     * <pre>
     * 昨收盘价
     * </pre>
     */
    float getPreClose();

    /**
     * <code>optional float high = 5;</code>
     *
     * <pre>
     * 最高价
     * </pre>
     */
    boolean hasHigh();
    /**
     * <code>optional float high = 5;</code>
     *
     * <pre>
     * 最高价
     * </pre>
     */
    float getHigh();

    /**
     * <code>optional float open = 6;</code>
     *
     * <pre>
     * 开盘价
     * </pre>
     */
    boolean hasOpen();
    /**
     * <code>optional float open = 6;</code>
     *
     * <pre>
     * 开盘价
     * </pre>
     */
    float getOpen();

    /**
     * <code>optional float low = 7;</code>
     *
     * <pre>
     * 最低价
     * </pre>
     */
    boolean hasLow();
    /**
     * <code>optional float low = 7;</code>
     *
     * <pre>
     * 最低价
     * </pre>
     */
    float getLow();

    /**
     * <code>optional float close = 8;</code>
     *
     * <pre>
     * 今收盘价
     * </pre>
     */
    boolean hasClose();
    /**
     * <code>optional float close = 8;</code>
     *
     * <pre>
     * 今收盘价
     * </pre>
     */
    float getClose();

    /**
     * <code>optional int64 volume = 9;</code>
     *
     * <pre>
     * 成交总量 (股)
     * </pre>
     */
    boolean hasVolume();
    /**
     * <code>optional int64 volume = 9;</code>
     *
     * <pre>
     * 成交总量 (股)
     * </pre>
     */
    long getVolume();

    /**
     * <code>optional double amount = 10;</code>
     *
     * <pre>
     * 成交金额 (元)
     * </pre>
     */
    boolean hasAmount();
    /**
     * <code>optional double amount = 10;</code>
     *
     * <pre>
     * 成交金额 (元)
     * </pre>
     */
    double getAmount();

    /**
     * <code>optional float netChange = 11;</code>
     *
     * <pre>
     * 涨跌额
     * </pre>
     */
    boolean hasNetChange();
    /**
     * <code>optional float netChange = 11;</code>
     *
     * <pre>
     * 涨跌额
     * </pre>
     */
    float getNetChange();

    /**
     * <code>optional float netChangeRatio = 12;</code>
     *
     * <pre>
     * 涨跌幅
     * </pre>
     */
    boolean hasNetChangeRatio();
    /**
     * <code>optional float netChangeRatio = 12;</code>
     *
     * <pre>
     * 涨跌幅
     * </pre>
     */
    float getNetChangeRatio();

    /**
     * <code>optional float limitUp = 13;</code>
     *
     * <pre>
     * 涨停
     * </pre>
     */
    boolean hasLimitUp();
    /**
     * <code>optional float limitUp = 13;</code>
     *
     * <pre>
     * 涨停
     * </pre>
     */
    float getLimitUp();

    /**
     * <code>optional float limitDown = 14;</code>
     *
     * <pre>
     * 跌停
     * </pre>
     */
    boolean hasLimitDown();
    /**
     * <code>optional float limitDown = 14;</code>
     *
     * <pre>
     * 跌停
     * </pre>
     */
    float getLimitDown();

    /**
     * <code>optional string enStockName = 15;</code>
     *
     * <pre>
     *港美股英文名称
     * </pre>
     */
    boolean hasEnStockName();
    /**
     * <code>optional string enStockName = 15;</code>
     *
     * <pre>
     *港美股英文名称
     * </pre>
     */
    java.lang.String getEnStockName();
    /**
     * <code>optional string enStockName = 15;</code>
     *
     * <pre>
     *港美股英文名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getEnStockNameBytes();
  }
  /**
   * Protobuf type {@code com.baidu.stock.quote.protocbuf.SnapShotBasic}
   */
  public static final class SnapShotBasic extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.baidu.stock.quote.protocbuf.SnapShotBasic)
      SnapShotBasicOrBuilder {
    // Use SnapShotBasic.newBuilder() to construct.
    private SnapShotBasic(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SnapShotBasic(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SnapShotBasic defaultInstance;
    public static SnapShotBasic getDefaultInstance() {
      return defaultInstance;
    }

    public SnapShotBasic getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SnapShotBasic(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              date_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              time_ = bs;
              break;
            }
            case 26: {
              com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = stockBasic_.toBuilder();
              }
              stockBasic_ = input.readMessage(com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stockBasic_);
                stockBasic_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              preClose_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              high_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              open_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              low_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              close_ = input.readFloat();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              volume_ = input.readInt64();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              amount_ = input.readDouble();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              netChange_ = input.readFloat();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              netChangeRatio_ = input.readFloat();
              break;
            }
            case 109: {
              bitField0_ |= 0x00001000;
              limitUp_ = input.readFloat();
              break;
            }
            case 117: {
              bitField0_ |= 0x00002000;
              limitDown_ = input.readFloat();
              break;
            }
            case 122: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00004000;
              enStockName_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.baidu.stock.quote.protocbuf.SnapShotBasicProto.internal_static_com_baidu_stock_quote_protocbuf_SnapShotBasic_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.baidu.stock.quote.protocbuf.SnapShotBasicProto.internal_static_com_baidu_stock_quote_protocbuf_SnapShotBasic_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic.class, com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic.Builder.class);
    }

    public static com.google.protobuf.Parser<SnapShotBasic> PARSER =
        new com.google.protobuf.AbstractParser<SnapShotBasic>() {
      public SnapShotBasic parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SnapShotBasic(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SnapShotBasic> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DATE_FIELD_NUMBER = 1;
    private java.lang.Object date_;
    /**
     * <code>required string date = 1;</code>
     *
     * <pre>
     * 日期格式 yyyyMMdd
     * </pre>
     */
    public boolean hasDate() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string date = 1;</code>
     *
     * <pre>
     * 日期格式 yyyyMMdd
     * </pre>
     */
    public java.lang.String getDate() {
      java.lang.Object ref = date_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          date_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string date = 1;</code>
     *
     * <pre>
     * 日期格式 yyyyMMdd
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDateBytes() {
      java.lang.Object ref = date_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        date_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private java.lang.Object time_;
    /**
     * <code>required string time = 2;</code>
     *
     * <pre>
     * 时间格式 HHmmss
     * </pre>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string time = 2;</code>
     *
     * <pre>
     * 时间格式 HHmmss
     * </pre>
     */
    public java.lang.String getTime() {
      java.lang.Object ref = time_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          time_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string time = 2;</code>
     *
     * <pre>
     * 时间格式 HHmmss
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTimeBytes() {
      java.lang.Object ref = time_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        time_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STOCKBASIC_FIELD_NUMBER = 3;
    private com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic stockBasic_;
    /**
     * <code>required .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 3;</code>
     *
     * <pre>
     * 股票信息
     * </pre>
     */
    public boolean hasStockBasic() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 3;</code>
     *
     * <pre>
     * 股票信息
     * </pre>
     */
    public com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic getStockBasic() {
      return stockBasic_;
    }
    /**
     * <code>required .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 3;</code>
     *
     * <pre>
     * 股票信息
     * </pre>
     */
    public com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasicOrBuilder getStockBasicOrBuilder() {
      return stockBasic_;
    }

    public static final int PRECLOSE_FIELD_NUMBER = 4;
    private float preClose_;
    /**
     * <code>optional float preClose = 4;</code>
     *
     * <pre>
     * 昨收盘价
     * </pre>
     */
    public boolean hasPreClose() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float preClose = 4;</code>
     *
     * <pre>
     * 昨收盘价
     * </pre>
     */
    public float getPreClose() {
      return preClose_;
    }

    public static final int HIGH_FIELD_NUMBER = 5;
    private float high_;
    /**
     * <code>optional float high = 5;</code>
     *
     * <pre>
     * 最高价
     * </pre>
     */
    public boolean hasHigh() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float high = 5;</code>
     *
     * <pre>
     * 最高价
     * </pre>
     */
    public float getHigh() {
      return high_;
    }

    public static final int OPEN_FIELD_NUMBER = 6;
    private float open_;
    /**
     * <code>optional float open = 6;</code>
     *
     * <pre>
     * 开盘价
     * </pre>
     */
    public boolean hasOpen() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float open = 6;</code>
     *
     * <pre>
     * 开盘价
     * </pre>
     */
    public float getOpen() {
      return open_;
    }

    public static final int LOW_FIELD_NUMBER = 7;
    private float low_;
    /**
     * <code>optional float low = 7;</code>
     *
     * <pre>
     * 最低价
     * </pre>
     */
    public boolean hasLow() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float low = 7;</code>
     *
     * <pre>
     * 最低价
     * </pre>
     */
    public float getLow() {
      return low_;
    }

    public static final int CLOSE_FIELD_NUMBER = 8;
    private float close_;
    /**
     * <code>optional float close = 8;</code>
     *
     * <pre>
     * 今收盘价
     * </pre>
     */
    public boolean hasClose() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float close = 8;</code>
     *
     * <pre>
     * 今收盘价
     * </pre>
     */
    public float getClose() {
      return close_;
    }

    public static final int VOLUME_FIELD_NUMBER = 9;
    private long volume_;
    /**
     * <code>optional int64 volume = 9;</code>
     *
     * <pre>
     * 成交总量 (股)
     * </pre>
     */
    public boolean hasVolume() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int64 volume = 9;</code>
     *
     * <pre>
     * 成交总量 (股)
     * </pre>
     */
    public long getVolume() {
      return volume_;
    }

    public static final int AMOUNT_FIELD_NUMBER = 10;
    private double amount_;
    /**
     * <code>optional double amount = 10;</code>
     *
     * <pre>
     * 成交金额 (元)
     * </pre>
     */
    public boolean hasAmount() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional double amount = 10;</code>
     *
     * <pre>
     * 成交金额 (元)
     * </pre>
     */
    public double getAmount() {
      return amount_;
    }

    public static final int NETCHANGE_FIELD_NUMBER = 11;
    private float netChange_;
    /**
     * <code>optional float netChange = 11;</code>
     *
     * <pre>
     * 涨跌额
     * </pre>
     */
    public boolean hasNetChange() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional float netChange = 11;</code>
     *
     * <pre>
     * 涨跌额
     * </pre>
     */
    public float getNetChange() {
      return netChange_;
    }

    public static final int NETCHANGERATIO_FIELD_NUMBER = 12;
    private float netChangeRatio_;
    /**
     * <code>optional float netChangeRatio = 12;</code>
     *
     * <pre>
     * 涨跌幅
     * </pre>
     */
    public boolean hasNetChangeRatio() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float netChangeRatio = 12;</code>
     *
     * <pre>
     * 涨跌幅
     * </pre>
     */
    public float getNetChangeRatio() {
      return netChangeRatio_;
    }

    public static final int LIMITUP_FIELD_NUMBER = 13;
    private float limitUp_;
    /**
     * <code>optional float limitUp = 13;</code>
     *
     * <pre>
     * 涨停
     * </pre>
     */
    public boolean hasLimitUp() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional float limitUp = 13;</code>
     *
     * <pre>
     * 涨停
     * </pre>
     */
    public float getLimitUp() {
      return limitUp_;
    }

    public static final int LIMITDOWN_FIELD_NUMBER = 14;
    private float limitDown_;
    /**
     * <code>optional float limitDown = 14;</code>
     *
     * <pre>
     * 跌停
     * </pre>
     */
    public boolean hasLimitDown() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional float limitDown = 14;</code>
     *
     * <pre>
     * 跌停
     * </pre>
     */
    public float getLimitDown() {
      return limitDown_;
    }

    public static final int ENSTOCKNAME_FIELD_NUMBER = 15;
    private java.lang.Object enStockName_;
    /**
     * <code>optional string enStockName = 15;</code>
     *
     * <pre>
     *港美股英文名称
     * </pre>
     */
    public boolean hasEnStockName() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string enStockName = 15;</code>
     *
     * <pre>
     *港美股英文名称
     * </pre>
     */
    public java.lang.String getEnStockName() {
      java.lang.Object ref = enStockName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          enStockName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string enStockName = 15;</code>
     *
     * <pre>
     *港美股英文名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEnStockNameBytes() {
      java.lang.Object ref = enStockName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        enStockName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      date_ = "";
      time_ = "";
      stockBasic_ = com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.getDefaultInstance();
      preClose_ = 0F;
      high_ = 0F;
      open_ = 0F;
      low_ = 0F;
      close_ = 0F;
      volume_ = 0L;
      amount_ = 0D;
      netChange_ = 0F;
      netChangeRatio_ = 0F;
      limitUp_ = 0F;
      limitDown_ = 0F;
      enStockName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStockBasic()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getStockBasic().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDateBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTimeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, stockBasic_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, preClose_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, high_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, open_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, low_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, close_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(9, volume_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeDouble(10, amount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, netChange_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, netChangeRatio_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(13, limitUp_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeFloat(14, limitDown_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, getEnStockNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDateBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTimeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, stockBasic_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, preClose_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, high_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, open_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, low_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, close_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, volume_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, amount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, netChange_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, netChangeRatio_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, limitUp_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, limitDown_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getEnStockNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.baidu.stock.quote.protocbuf.SnapShotBasic}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.baidu.stock.quote.protocbuf.SnapShotBasic)
        com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasicOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.baidu.stock.quote.protocbuf.SnapShotBasicProto.internal_static_com_baidu_stock_quote_protocbuf_SnapShotBasic_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.baidu.stock.quote.protocbuf.SnapShotBasicProto.internal_static_com_baidu_stock_quote_protocbuf_SnapShotBasic_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic.class, com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic.Builder.class);
      }

      // Construct using com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStockBasicFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        date_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (stockBasicBuilder_ == null) {
          stockBasic_ = com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.getDefaultInstance();
        } else {
          stockBasicBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        preClose_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        high_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        open_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        low_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        close_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        volume_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        amount_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        netChange_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        netChangeRatio_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        limitUp_ = 0F;
        bitField0_ = (bitField0_ & ~0x00001000);
        limitDown_ = 0F;
        bitField0_ = (bitField0_ & ~0x00002000);
        enStockName_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.baidu.stock.quote.protocbuf.SnapShotBasicProto.internal_static_com_baidu_stock_quote_protocbuf_SnapShotBasic_descriptor;
      }

      public com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic getDefaultInstanceForType() {
        return com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic.getDefaultInstance();
      }

      public com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic build() {
        com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic buildPartial() {
        com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic result = new com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.date_ = date_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (stockBasicBuilder_ == null) {
          result.stockBasic_ = stockBasic_;
        } else {
          result.stockBasic_ = stockBasicBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.preClose_ = preClose_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.high_ = high_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.open_ = open_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.low_ = low_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.close_ = close_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.volume_ = volume_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.amount_ = amount_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.netChange_ = netChange_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.netChangeRatio_ = netChangeRatio_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.limitUp_ = limitUp_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.limitDown_ = limitDown_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.enStockName_ = enStockName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic) {
          return mergeFrom((com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic other) {
        if (other == com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic.getDefaultInstance()) return this;
        if (other.hasDate()) {
          bitField0_ |= 0x00000001;
          date_ = other.date_;
          onChanged();
        }
        if (other.hasTime()) {
          bitField0_ |= 0x00000002;
          time_ = other.time_;
          onChanged();
        }
        if (other.hasStockBasic()) {
          mergeStockBasic(other.getStockBasic());
        }
        if (other.hasPreClose()) {
          setPreClose(other.getPreClose());
        }
        if (other.hasHigh()) {
          setHigh(other.getHigh());
        }
        if (other.hasOpen()) {
          setOpen(other.getOpen());
        }
        if (other.hasLow()) {
          setLow(other.getLow());
        }
        if (other.hasClose()) {
          setClose(other.getClose());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        if (other.hasAmount()) {
          setAmount(other.getAmount());
        }
        if (other.hasNetChange()) {
          setNetChange(other.getNetChange());
        }
        if (other.hasNetChangeRatio()) {
          setNetChangeRatio(other.getNetChangeRatio());
        }
        if (other.hasLimitUp()) {
          setLimitUp(other.getLimitUp());
        }
        if (other.hasLimitDown()) {
          setLimitDown(other.getLimitDown());
        }
        if (other.hasEnStockName()) {
          bitField0_ |= 0x00004000;
          enStockName_ = other.enStockName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDate()) {
          
          return false;
        }
        if (!hasTime()) {
          
          return false;
        }
        if (!hasStockBasic()) {
          
          return false;
        }
        if (!getStockBasic().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.baidu.stock.quote.protocbuf.SnapShotBasicProto.SnapShotBasic) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object date_ = "";
      /**
       * <code>required string date = 1;</code>
       *
       * <pre>
       * 日期格式 yyyyMMdd
       * </pre>
       */
      public boolean hasDate() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string date = 1;</code>
       *
       * <pre>
       * 日期格式 yyyyMMdd
       * </pre>
       */
      public java.lang.String getDate() {
        java.lang.Object ref = date_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            date_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string date = 1;</code>
       *
       * <pre>
       * 日期格式 yyyyMMdd
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDateBytes() {
        java.lang.Object ref = date_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          date_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string date = 1;</code>
       *
       * <pre>
       * 日期格式 yyyyMMdd
       * </pre>
       */
      public Builder setDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        date_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string date = 1;</code>
       *
       * <pre>
       * 日期格式 yyyyMMdd
       * </pre>
       */
      public Builder clearDate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        date_ = getDefaultInstance().getDate();
        onChanged();
        return this;
      }
      /**
       * <code>required string date = 1;</code>
       *
       * <pre>
       * 日期格式 yyyyMMdd
       * </pre>
       */
      public Builder setDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        date_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object time_ = "";
      /**
       * <code>required string time = 2;</code>
       *
       * <pre>
       * 时间格式 HHmmss
       * </pre>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string time = 2;</code>
       *
       * <pre>
       * 时间格式 HHmmss
       * </pre>
       */
      public java.lang.String getTime() {
        java.lang.Object ref = time_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            time_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string time = 2;</code>
       *
       * <pre>
       * 时间格式 HHmmss
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTimeBytes() {
        java.lang.Object ref = time_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          time_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string time = 2;</code>
       *
       * <pre>
       * 时间格式 HHmmss
       * </pre>
       */
      public Builder setTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string time = 2;</code>
       *
       * <pre>
       * 时间格式 HHmmss
       * </pre>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = getDefaultInstance().getTime();
        onChanged();
        return this;
      }
      /**
       * <code>required string time = 2;</code>
       *
       * <pre>
       * 时间格式 HHmmss
       * </pre>
       */
      public Builder setTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        time_ = value;
        onChanged();
        return this;
      }

      private com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic stockBasic_ = com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic, com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.Builder, com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasicOrBuilder> stockBasicBuilder_;
      /**
       * <code>required .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 3;</code>
       *
       * <pre>
       * 股票信息
       * </pre>
       */
      public boolean hasStockBasic() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 3;</code>
       *
       * <pre>
       * 股票信息
       * </pre>
       */
      public com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic getStockBasic() {
        if (stockBasicBuilder_ == null) {
          return stockBasic_;
        } else {
          return stockBasicBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 3;</code>
       *
       * <pre>
       * 股票信息
       * </pre>
       */
      public Builder setStockBasic(com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic value) {
        if (stockBasicBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stockBasic_ = value;
          onChanged();
        } else {
          stockBasicBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 3;</code>
       *
       * <pre>
       * 股票信息
       * </pre>
       */
      public Builder setStockBasic(
          com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.Builder builderForValue) {
        if (stockBasicBuilder_ == null) {
          stockBasic_ = builderForValue.build();
          onChanged();
        } else {
          stockBasicBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 3;</code>
       *
       * <pre>
       * 股票信息
       * </pre>
       */
      public Builder mergeStockBasic(com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic value) {
        if (stockBasicBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              stockBasic_ != com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.getDefaultInstance()) {
            stockBasic_ =
              com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.newBuilder(stockBasic_).mergeFrom(value).buildPartial();
          } else {
            stockBasic_ = value;
          }
          onChanged();
        } else {
          stockBasicBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 3;</code>
       *
       * <pre>
       * 股票信息
       * </pre>
       */
      public Builder clearStockBasic() {
        if (stockBasicBuilder_ == null) {
          stockBasic_ = com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.getDefaultInstance();
          onChanged();
        } else {
          stockBasicBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 3;</code>
       *
       * <pre>
       * 股票信息
       * </pre>
       */
      public com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.Builder getStockBasicBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getStockBasicFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 3;</code>
       *
       * <pre>
       * 股票信息
       * </pre>
       */
      public com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasicOrBuilder getStockBasicOrBuilder() {
        if (stockBasicBuilder_ != null) {
          return stockBasicBuilder_.getMessageOrBuilder();
        } else {
          return stockBasic_;
        }
      }
      /**
       * <code>required .com.baidu.stock.quote.protocbuf.StockBasic stockBasic = 3;</code>
       *
       * <pre>
       * 股票信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic, com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.Builder, com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasicOrBuilder> 
          getStockBasicFieldBuilder() {
        if (stockBasicBuilder_ == null) {
          stockBasicBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic, com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasic.Builder, com.baidu.stock.quote.protocbuf.StockBasicProto.StockBasicOrBuilder>(
                  getStockBasic(),
                  getParentForChildren(),
                  isClean());
          stockBasic_ = null;
        }
        return stockBasicBuilder_;
      }

      private float preClose_ ;
      /**
       * <code>optional float preClose = 4;</code>
       *
       * <pre>
       * 昨收盘价
       * </pre>
       */
      public boolean hasPreClose() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float preClose = 4;</code>
       *
       * <pre>
       * 昨收盘价
       * </pre>
       */
      public float getPreClose() {
        return preClose_;
      }
      /**
       * <code>optional float preClose = 4;</code>
       *
       * <pre>
       * 昨收盘价
       * </pre>
       */
      public Builder setPreClose(float value) {
        bitField0_ |= 0x00000008;
        preClose_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float preClose = 4;</code>
       *
       * <pre>
       * 昨收盘价
       * </pre>
       */
      public Builder clearPreClose() {
        bitField0_ = (bitField0_ & ~0x00000008);
        preClose_ = 0F;
        onChanged();
        return this;
      }

      private float high_ ;
      /**
       * <code>optional float high = 5;</code>
       *
       * <pre>
       * 最高价
       * </pre>
       */
      public boolean hasHigh() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float high = 5;</code>
       *
       * <pre>
       * 最高价
       * </pre>
       */
      public float getHigh() {
        return high_;
      }
      /**
       * <code>optional float high = 5;</code>
       *
       * <pre>
       * 最高价
       * </pre>
       */
      public Builder setHigh(float value) {
        bitField0_ |= 0x00000010;
        high_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float high = 5;</code>
       *
       * <pre>
       * 最高价
       * </pre>
       */
      public Builder clearHigh() {
        bitField0_ = (bitField0_ & ~0x00000010);
        high_ = 0F;
        onChanged();
        return this;
      }

      private float open_ ;
      /**
       * <code>optional float open = 6;</code>
       *
       * <pre>
       * 开盘价
       * </pre>
       */
      public boolean hasOpen() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float open = 6;</code>
       *
       * <pre>
       * 开盘价
       * </pre>
       */
      public float getOpen() {
        return open_;
      }
      /**
       * <code>optional float open = 6;</code>
       *
       * <pre>
       * 开盘价
       * </pre>
       */
      public Builder setOpen(float value) {
        bitField0_ |= 0x00000020;
        open_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float open = 6;</code>
       *
       * <pre>
       * 开盘价
       * </pre>
       */
      public Builder clearOpen() {
        bitField0_ = (bitField0_ & ~0x00000020);
        open_ = 0F;
        onChanged();
        return this;
      }

      private float low_ ;
      /**
       * <code>optional float low = 7;</code>
       *
       * <pre>
       * 最低价
       * </pre>
       */
      public boolean hasLow() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float low = 7;</code>
       *
       * <pre>
       * 最低价
       * </pre>
       */
      public float getLow() {
        return low_;
      }
      /**
       * <code>optional float low = 7;</code>
       *
       * <pre>
       * 最低价
       * </pre>
       */
      public Builder setLow(float value) {
        bitField0_ |= 0x00000040;
        low_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float low = 7;</code>
       *
       * <pre>
       * 最低价
       * </pre>
       */
      public Builder clearLow() {
        bitField0_ = (bitField0_ & ~0x00000040);
        low_ = 0F;
        onChanged();
        return this;
      }

      private float close_ ;
      /**
       * <code>optional float close = 8;</code>
       *
       * <pre>
       * 今收盘价
       * </pre>
       */
      public boolean hasClose() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float close = 8;</code>
       *
       * <pre>
       * 今收盘价
       * </pre>
       */
      public float getClose() {
        return close_;
      }
      /**
       * <code>optional float close = 8;</code>
       *
       * <pre>
       * 今收盘价
       * </pre>
       */
      public Builder setClose(float value) {
        bitField0_ |= 0x00000080;
        close_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float close = 8;</code>
       *
       * <pre>
       * 今收盘价
       * </pre>
       */
      public Builder clearClose() {
        bitField0_ = (bitField0_ & ~0x00000080);
        close_ = 0F;
        onChanged();
        return this;
      }

      private long volume_ ;
      /**
       * <code>optional int64 volume = 9;</code>
       *
       * <pre>
       * 成交总量 (股)
       * </pre>
       */
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 volume = 9;</code>
       *
       * <pre>
       * 成交总量 (股)
       * </pre>
       */
      public long getVolume() {
        return volume_;
      }
      /**
       * <code>optional int64 volume = 9;</code>
       *
       * <pre>
       * 成交总量 (股)
       * </pre>
       */
      public Builder setVolume(long value) {
        bitField0_ |= 0x00000100;
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 volume = 9;</code>
       *
       * <pre>
       * 成交总量 (股)
       * </pre>
       */
      public Builder clearVolume() {
        bitField0_ = (bitField0_ & ~0x00000100);
        volume_ = 0L;
        onChanged();
        return this;
      }

      private double amount_ ;
      /**
       * <code>optional double amount = 10;</code>
       *
       * <pre>
       * 成交金额 (元)
       * </pre>
       */
      public boolean hasAmount() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional double amount = 10;</code>
       *
       * <pre>
       * 成交金额 (元)
       * </pre>
       */
      public double getAmount() {
        return amount_;
      }
      /**
       * <code>optional double amount = 10;</code>
       *
       * <pre>
       * 成交金额 (元)
       * </pre>
       */
      public Builder setAmount(double value) {
        bitField0_ |= 0x00000200;
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double amount = 10;</code>
       *
       * <pre>
       * 成交金额 (元)
       * </pre>
       */
      public Builder clearAmount() {
        bitField0_ = (bitField0_ & ~0x00000200);
        amount_ = 0D;
        onChanged();
        return this;
      }

      private float netChange_ ;
      /**
       * <code>optional float netChange = 11;</code>
       *
       * <pre>
       * 涨跌额
       * </pre>
       */
      public boolean hasNetChange() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional float netChange = 11;</code>
       *
       * <pre>
       * 涨跌额
       * </pre>
       */
      public float getNetChange() {
        return netChange_;
      }
      /**
       * <code>optional float netChange = 11;</code>
       *
       * <pre>
       * 涨跌额
       * </pre>
       */
      public Builder setNetChange(float value) {
        bitField0_ |= 0x00000400;
        netChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float netChange = 11;</code>
       *
       * <pre>
       * 涨跌额
       * </pre>
       */
      public Builder clearNetChange() {
        bitField0_ = (bitField0_ & ~0x00000400);
        netChange_ = 0F;
        onChanged();
        return this;
      }

      private float netChangeRatio_ ;
      /**
       * <code>optional float netChangeRatio = 12;</code>
       *
       * <pre>
       * 涨跌幅
       * </pre>
       */
      public boolean hasNetChangeRatio() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float netChangeRatio = 12;</code>
       *
       * <pre>
       * 涨跌幅
       * </pre>
       */
      public float getNetChangeRatio() {
        return netChangeRatio_;
      }
      /**
       * <code>optional float netChangeRatio = 12;</code>
       *
       * <pre>
       * 涨跌幅
       * </pre>
       */
      public Builder setNetChangeRatio(float value) {
        bitField0_ |= 0x00000800;
        netChangeRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float netChangeRatio = 12;</code>
       *
       * <pre>
       * 涨跌幅
       * </pre>
       */
      public Builder clearNetChangeRatio() {
        bitField0_ = (bitField0_ & ~0x00000800);
        netChangeRatio_ = 0F;
        onChanged();
        return this;
      }

      private float limitUp_ ;
      /**
       * <code>optional float limitUp = 13;</code>
       *
       * <pre>
       * 涨停
       * </pre>
       */
      public boolean hasLimitUp() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional float limitUp = 13;</code>
       *
       * <pre>
       * 涨停
       * </pre>
       */
      public float getLimitUp() {
        return limitUp_;
      }
      /**
       * <code>optional float limitUp = 13;</code>
       *
       * <pre>
       * 涨停
       * </pre>
       */
      public Builder setLimitUp(float value) {
        bitField0_ |= 0x00001000;
        limitUp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float limitUp = 13;</code>
       *
       * <pre>
       * 涨停
       * </pre>
       */
      public Builder clearLimitUp() {
        bitField0_ = (bitField0_ & ~0x00001000);
        limitUp_ = 0F;
        onChanged();
        return this;
      }

      private float limitDown_ ;
      /**
       * <code>optional float limitDown = 14;</code>
       *
       * <pre>
       * 跌停
       * </pre>
       */
      public boolean hasLimitDown() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional float limitDown = 14;</code>
       *
       * <pre>
       * 跌停
       * </pre>
       */
      public float getLimitDown() {
        return limitDown_;
      }
      /**
       * <code>optional float limitDown = 14;</code>
       *
       * <pre>
       * 跌停
       * </pre>
       */
      public Builder setLimitDown(float value) {
        bitField0_ |= 0x00002000;
        limitDown_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float limitDown = 14;</code>
       *
       * <pre>
       * 跌停
       * </pre>
       */
      public Builder clearLimitDown() {
        bitField0_ = (bitField0_ & ~0x00002000);
        limitDown_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object enStockName_ = "";
      /**
       * <code>optional string enStockName = 15;</code>
       *
       * <pre>
       *港美股英文名称
       * </pre>
       */
      public boolean hasEnStockName() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string enStockName = 15;</code>
       *
       * <pre>
       *港美股英文名称
       * </pre>
       */
      public java.lang.String getEnStockName() {
        java.lang.Object ref = enStockName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            enStockName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string enStockName = 15;</code>
       *
       * <pre>
       *港美股英文名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEnStockNameBytes() {
        java.lang.Object ref = enStockName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          enStockName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string enStockName = 15;</code>
       *
       * <pre>
       *港美股英文名称
       * </pre>
       */
      public Builder setEnStockName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        enStockName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string enStockName = 15;</code>
       *
       * <pre>
       *港美股英文名称
       * </pre>
       */
      public Builder clearEnStockName() {
        bitField0_ = (bitField0_ & ~0x00004000);
        enStockName_ = getDefaultInstance().getEnStockName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string enStockName = 15;</code>
       *
       * <pre>
       *港美股英文名称
       * </pre>
       */
      public Builder setEnStockNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        enStockName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.baidu.stock.quote.protocbuf.SnapShotBasic)
    }

    static {
      defaultInstance = new SnapShotBasic(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.baidu.stock.quote.protocbuf.SnapShotBasic)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_baidu_stock_quote_protocbuf_SnapShotBasic_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_baidu_stock_quote_protocbuf_SnapShotBasic_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023SnapShotBasic.proto\022\037com.baidu.stock.q" +
      "uote.protocbuf\032\020StockBasic.proto\"\272\002\n\rSna" +
      "pShotBasic\022\014\n\004date\030\001 \002(\t\022\014\n\004time\030\002 \002(\t\022?" +
      "\n\nstockBasic\030\003 \002(\0132+.com.baidu.stock.quo" +
      "te.protocbuf.StockBasic\022\020\n\010preClose\030\004 \001(" +
      "\002\022\014\n\004high\030\005 \001(\002\022\014\n\004open\030\006 \001(\002\022\013\n\003low\030\007 \001" +
      "(\002\022\r\n\005close\030\010 \001(\002\022\016\n\006volume\030\t \001(\003\022\016\n\006amo" +
      "unt\030\n \001(\001\022\021\n\tnetChange\030\013 \001(\002\022\026\n\016netChang" +
      "eRatio\030\014 \001(\002\022\017\n\007limitUp\030\r \001(\002\022\021\n\tlimitDo" +
      "wn\030\016 \001(\002\022\023\n\013enStockName\030\017 \001(\tB5\n\037com.bai",
      "du.stock.quote.protocbufB\022SnapShotBasicP" +
      "roto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.baidu.stock.quote.protocbuf.StockBasicProto.getDescriptor(),
        }, assigner);
    internal_static_com_baidu_stock_quote_protocbuf_SnapShotBasic_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_baidu_stock_quote_protocbuf_SnapShotBasic_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_baidu_stock_quote_protocbuf_SnapShotBasic_descriptor,
        new java.lang.String[] { "Date", "Time", "StockBasic", "PreClose", "High", "Open", "Low", "Close", "Volume", "Amount", "NetChange", "NetChangeRatio", "LimitUp", "LimitDown", "EnStockName", });
    com.baidu.stock.quote.protocbuf.StockBasicProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
